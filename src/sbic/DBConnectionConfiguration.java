/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sbic;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class DBConnectionConfiguration extends javax.swing.JPanel {

    /**
     * Creates new form DBConnectionDataSetter
     */
    public DBConnectionConfiguration() throws IOException {
        initComponents();
        loadConfigToForm();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        serverNameField = new javax.swing.JTextField();
        portNumberField = new javax.swing.JTextField();
        userNameField = new javax.swing.JTextField();
        databaseNameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JTextField();
        DBConnectionSaveBtn = new javax.swing.JButton();
        DBConnectionDataReset = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("DB Connection Configuration"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Server Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Port Number");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Database Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("User Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Password");

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        DBConnectionSaveBtn.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        DBConnectionSaveBtn.setText("SAVE");
        DBConnectionSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DBConnectionSaveBtnActionPerformed(evt);
            }
        });

        DBConnectionDataReset.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        DBConnectionDataReset.setText("RESET");
        DBConnectionDataReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DBConnectionDataResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(passwordField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(databaseNameField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(DBConnectionSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DBConnectionDataReset))
                            .addComponent(userNameField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(serverNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(portNumberField)
                                .addGap(1, 1, 1)))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(databaseNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DBConnectionSaveBtn)
                    .addComponent(DBConnectionDataReset))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("DB Connection Configuration");
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void DBConnectionSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DBConnectionSaveBtnActionPerformed
        // TODO add your handling code here:

        try {

            if (serverNameField.getText().equals("")) {

                JOptionPane.showMessageDialog(this, "Server Name Required", "Database Connection Configuration", JOptionPane.ERROR_MESSAGE);

            } else if (portNumberField.getText().equals("")) {

                JOptionPane.showMessageDialog(this, "Port Number Required", "Database Connection Configuration", JOptionPane.ERROR_MESSAGE);

            } else if (databaseNameField.getText().equals("")) {

                JOptionPane.showMessageDialog(this, "Database Name Required", "Database Connection Configuration", JOptionPane.ERROR_MESSAGE);

            } else if (userNameField.getText().equals("")) {

                JOptionPane.showMessageDialog(this, "User Name Required", "Database Connection Configuration", JOptionPane.ERROR_MESSAGE);

            } else {

                try {
                    String url = "jdbc:mysql://" + serverNameField.getText() + ":" + portNumberField.getText() + "/" + databaseNameField.getText();
                    Connection connection = DriverManager.getConnection(url, userNameField.getText(), passwordField.getText());

                    JOptionPane.showMessageDialog(this, "Configuration Saved Successfully!", "Database Connection Configuration", JOptionPane.INFORMATION_MESSAGE);

                    DBConnection.setDBConfig(serverNameField.getText(), portNumberField.getText(), databaseNameField.getText(), userNameField.getText(), passwordField.getText());

                    if(Session.isLoggedIn()){
                    Session.logUserOut();
                    }
                    
                    
                    this.setVisible(false);
                    
                    DBConnection.connect();
                    ProgramWindow.startWindow();
                    connection.close();

                } catch (SQLException sqlExceprion) {

                    JOptionPane.showMessageDialog(this, "Configuration is not valid!", "Database Connection Configuration", JOptionPane.ERROR_MESSAGE);

                }

            }

            // retrieve text from the text field and sert it to DBConfig file
        } catch (Exception ex) {
            Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DBConnectionSaveBtnActionPerformed

    private void DBConnectionDataResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DBConnectionDataResetActionPerformed
      
        this.serverNameField.setText(DBConnection.DEFAULT_SERVER_NAME);
        this.portNumberField.setText(DBConnection.DEFAULT_PORT_NUMBER);
        this.databaseNameField.setText(DBConnection.DEFAULT_DATABASE_NAME);
        this.userNameField.setText(DBConnection.DEFAULT_USER_NAME);
        this.passwordField.setText(DBConnection.DEFAULT_PASSWORD);
    }//GEN-LAST:event_DBConnectionDataResetActionPerformed

    void loadConfigToForm() throws IOException {

        DBConnection.loadDBConfig();

        this.serverNameField.setText(DBConnection.getServerName());
        this.portNumberField.setText(DBConnection.getPortNumber());
        this.databaseNameField.setText(DBConnection.getDatabaseName());
        this.userNameField.setText(DBConnection.getUserName());
        this.passwordField.setText(DBConnection.getPassword());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DBConnectionDataReset;
    private javax.swing.JButton DBConnectionSaveBtn;
    private javax.swing.JTextField databaseNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField passwordField;
    private javax.swing.JTextField portNumberField;
    private javax.swing.JTextField serverNameField;
    private javax.swing.JTextField userNameField;
    // End of variables declaration//GEN-END:variables
}
